{"version":3,"sources":["components/AddTodo.js","components/TodoItem.js","components/Todos.js","components/pages/AboutApi.js","App.js","index.js"],"names":["AddTodo","props","useState","title","setTitle","className","onSubmit","e","preventDefault","addTodo","type","placeholder","value","onChange","target","TodoItem","textClassName","todo","completed","contentEditable","spellCheck","onBlur","updateTitle","id","innerText","suppressContentEditableWarning","dayjs","extend","relativeTime","date","fromNow","onClick","deleteTodo","bind","this","toggleComplete","Todos","todos","map","key","AboutApi","Fragment","library","add","faTrash","faCheckCircle","App","setTodos","useEffect","cached","JSON","parse","localStorage","getItem","setItem","stringify","exact","path","newTodo","uuid","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f6f49c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction AddTodo(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const onChange = (e) => setTitle(e.target.value);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addTodo(title);\r\n    setTitle(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-lg overflow-hidden my-10 mx-auto rounded-full shadow-lg\">\r\n      <form className=\"w-full max-w-lg\" onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add to do ...\"\r\n          className=\"bg-gray-200 border-none w-full text-gray-800 font-bold text-lg mr-3 py-5 px-10  focus:outline-none placeholder-gray-600 focus:bg-gray-300\"\r\n          value={title}\r\n          onChange={onChange}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"@fortawesome/fontawesome-free\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\nfunction TodoItem(props) {\r\n  const textClassName =\r\n    \"w-full break-words px-2 py-2 mb-6 font-bold text-lg\" +\r\n    (props.todo.completed ? \" line-through text-gray-500\" : \" text-gray-800\");\r\n\r\n  const onInput = (e) => {\r\n    props.updateTitle(props.todo.id, e.target.innerText);\r\n  };\r\n\r\n  const getDate = () => {\r\n    dayjs.extend(relativeTime);\r\n    return dayjs(props.todo.date).fromNow();\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md min-w-full rounded shadow-lg p-3 mx-auto my-3 md:my-5 relative\">\r\n      <div className=\"\">\r\n        <p\r\n          className={textClassName}\r\n          contentEditable=\"true\"\r\n          spellCheck=\"false\"\r\n          onBlur={onInput}\r\n          suppressContentEditableWarning=\"true\"\r\n        >\r\n          {props.todo.title}\r\n        </p>\r\n      </div>\r\n      <div className=\"flex items-center justify-between mx-5 mb-3 absolute bottom-0 right-0 left-0\">\r\n        <span className=\"text-left text-gray-700 text-sm\">{getDate()}</span>\r\n        <div className=\"flex flex-row-reverse items-center\">\r\n          <div className=\"flex-shrink-0 px-1\">\r\n            <button\r\n              className=\"text-md font-normal text-gray-400 hover:text-red-500 focus:outline-none\"\r\n              onClick={props.deleteTodo.bind(this, props.todo.id)}\r\n            >\r\n              <i className=\"fas fa-trash fa-lg\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"flex-shrink-0 px-2\">\r\n            <button\r\n              className=\"text-md font-normal text-gray-400 hover:text-green-500 focus:outline-none\"\r\n              onClick={props.toggleComplete.bind(this, props.todo.id)}\r\n            >\r\n              <i className=\"fas fa-check-circle fa-lg\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Todos(props) {\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 col-gap-8 row-gap-0 px-2\">\r\n      {props.todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          toggleComplete={props.toggleComplete}\r\n          deleteTodo={props.deleteTodo}\r\n          updateTitle={props.updateTitle}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Todos;\r\n","import React from 'react'\r\n\r\nfunction AboutApi() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>API</h1>\r\n            <p>Using Reactjs</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AboutApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport Todos from \"./components/Todos\";\r\nimport AboutApi from \"./components/pages/AboutApi\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faTrash, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport dayjs from \"dayjs\";\r\n// import axios from \"axios\";\r\n\r\nlibrary.add(faTrash, faCheckCircle);\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  // Initially get cached todo items from localStorage\r\n  useEffect(() => {\r\n    const cached = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n    setTodos(cached, []);\r\n  }, []);\r\n\r\n  // Update localStorage when 'todos' changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  /* useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then((res) => setTodos(res.data));\r\n  }, []); */\r\n\r\n  // Toggle Todo as Completed or Not\r\n  const toggleComplete = (id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) todo.completed = !todo.completed;\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  // Add a New Todo\r\n  const addTodo = (title) => {\r\n    if (!title) return;\r\n    const newTodo = {\r\n      id: uuid(),\r\n      title,\r\n      completed: false,\r\n      date: dayjs(),\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n\r\n    /* const newTodo = {\r\n      id: uuid(),\r\n      title,\r\n      completed: false,\r\n    };\r\n\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/todos\", newTodo)\r\n      .then((res) => setTodos([...todos, res.data])); */\r\n  };\r\n\r\n  // Delete Todo\r\n  const deleteTodo = (id) => {\r\n    setTodos([...todos.filter((todo) => todo.id !== id)]);\r\n\r\n    /* axios\r\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then((res) => setTodos([...todos.filter((todo) => todo.id !== id)])); */\r\n  };\r\n\r\n  const updateTitle = (id, title) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) todo.title = title;\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container mx-auto px-4\">\r\n        <Route exact path=\"/\">\r\n          <AddTodo addTodo={addTodo} />\r\n          <Todos\r\n            todos={todos}\r\n            toggleComplete={toggleComplete}\r\n            deleteTodo={deleteTodo}\r\n            updateTitle={updateTitle}\r\n          />\r\n        </Route>\r\n        <Route path=\"/api\">\r\n          <AboutApi />\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./assets/main.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}